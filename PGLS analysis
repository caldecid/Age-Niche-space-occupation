# packages utilized -------------------------------------------------------

library(ape)
library(tidyr)
library(dplyr)
library(raster)
library(maptools)
library(rgdal)
library(stringr)
library(rgeos)
library(cleangeo)
library(CENFA)
library(car)
library(caper)
library(nlme)
library(ggplot2)
library(modelr)
library(multcomp)
library(ggsignif)

# Creating final output -----------------------------------------------

###Ages for each bioregion##

enfa.furnar <- select(enfa.age.phy, bioregion, species, stem.age, marginality, specialization)


###creating a list for storing each bioregion

furnar.enfa.list <- list()


##loop for selecting and filtering the sp present in each bioregion
for(i in 1:15){
  furnar.enfa.list[[i]] <- filter(enfa.furnar, bioregion == paste0("bio",i))
}

###applying nodes.ages to all dataframes inside the list
furnar.enfa.ages <- lapply(furnar.enfa.list, function(x) nodes.ages(furnar.phy,x))

##transforming the list into a data.frame
furnar.enfa.ages <- do.call("rbind", furnar.enfa.ages)

############we are going to analyze only the age of the first node (stem age)###
furna.data <- select(furnar.enfa.ages, bioregion, species, stem.age,
                             node1_ages, marginality, specialization) %>%
                      rename(crown_age = stem.age,
                             stem_age = node1_ages)  

furna.data$bioregion <- as.factor(furna.data$bioregion)

####crown_age was calculated from a function of Tanentzap et al. 2020

# checking initial assumptions -----------------------------------------------

###Checking the distribution of variables
 
str(furna.data)

###predictors####
hist(furna.data$stem_age) ###quite skewed 

hist(log(furna.data$stem_age+1)) ##seems normal

hist(log(furna.data$crown_age+1)) ##seems normal

###merging the log transformed predictor variables into the data
furna.data$stem.log <- log(furna.data$stem_age+1)

furna.data$crown.log <- log(furna.data$crown_age+1)

names(furna.data)

###responses###
hist(furna.data$marginality) ###quite skewed

hist(log(furna.data$marginality+1)) ##seems normal

hist(furna.data$specialization) ##very much skewed

hist(log(furna.data$specialization+1))###gets better but it is still skewed

###merging the log transformed response variables into the data
furna.data$marg.log <- log(furna.data$marginality+1)

furna.data$spe.log <- log(furna.data$specialization+1)


# fitting PGLS ------------------------------------------------------------


##which species are absent in the bioregions and not in the phylogeny
not.tree <- which(furnar.phy$tip.label %in% furna.data$species == 0 )

###trimming the tree
tree.trim <- drop.tip(furnar.phy, not.tree)

#############fitting marginality ~ stem age#######################

###we should use method = "ML", due to posterior full model comparison 
m.marg.stem <- gls(marg.log ~ stem.log + bioregion, data = furna.data,
                   correlation = corBrownian(1, tree.trim, form = ~species),
                   method = "ML")

summary(m.marg.stem)
anova(m.marg.stem) ##significant results
intervals(m.marg.stem) ##confidence intervals

##checking model assumptions
hist(m.marg.stem$residuals) ##seems normal
qqnorm(m.marg.stem$residuals)
qqline(m.marg.stem$residuals)##looks fine

plot(fitted(m.marg.stem), m.marg.stem$residuals, pch = 20) ###it has a strange patter

####full model comparison##

##null model controlling for bioregions
m.marg.stem.null.bio <- gls(marg.log ~ bioregion, data = furna.data,
                        correlation = corBrownian(1, tree.trim, form = ~species),
                        method = "ML")

anova(m.marg.stem, m.marg.stem.null.bio) ##is not significative (almost)

###null model without predictors
m.marg.stem.null.total <- gls(marg.log ~ 1, data = furna.data,
                        correlation = corBrownian(1, tree.trim, form = ~species),
                        method = "ML")

anova(m.marg.stem, m.marg.stem.null.total) ###significative (bioregions)



##apparently, Bioregion is a better predictor than stem.age for marginality

###function for adapting glht for gls
model.matrix.gls <- function(object, ...) {
  model.matrix(terms(object), data = getData(object), ...)
}
model.frame.gls <- function(object, ...) {
  model.frame(formula(object), data = getData(object), ...)
}
terms.gls <- function(object, ...) {
  terms(model.frame(object), ...)
}

###tukey test for evaluating which bioregions are different according to marginality
post.marg.stem <- glht(m.marg.stem.null.bio, linfct = mcp(bioregion = "Tukey"))
summary(post.marg.stem) ##only bio2 and bio1 are significatively different


#########graphic boxplot########


##defining fonts, faces and sizes  
mynamestheme <- theme(axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("marg.bio.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
marg.bio <- ggplot(data = furna.data, aes(reorder(bioregion, -marg.log), marg.log))

##ggplot complement
x = marg.bio + geom_boxplot(width=0.5, fill="gray90")
p = x + labs(x = "Bioregions", 
             y = "log Marginality")+
  theme_bw() + geom_jitter(shape=16, size = 1, alpha = 0.3, position=position_jitter(0.2))

o = p+geom_signif(comparisons = list(c("bio1", "bio2")), 
                  map_signif_level=TRUE)


o+mynamestheme

dev.off()


###comparing the absence of stem age
m.marg.stem.only <- gls(marg.log ~ stem.log, data = furna.data,
                        correlation = corBrownian(1, tree.trim, form = ~species),
                        method = "ML")

summary(m.marg.stem.only)
anova(m.marg.stem.only, m.marg.stem.null)
anova(m.marg.stem.only, m.marg.stem.wbio)
int.marg.stem.only <- intervals(m.marg.stem.only)

####Graphics#######

###data frame from the model
grid.marg.stem <- furna.data %>%
                  data_grid(stem.log) %>%
                  add_predictions(m.marg.stem.only, var = "marg.log")
        

##defining fonts, faces and sizes  
mynamestheme <- theme(legend.title = element_text(family = "serif", size = (10)), 
                      legend.text = element_text(face = "italic", family = "serif", size = (9)), 
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("marg.stem.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
marg.stem <- ggplot(furna.data, aes(x = stem.log, y = marg.log))
##ggplot complement

p = marg.stem + geom_point()+
  labs(x = "log Stem Age (myr)", 
       y = "log Marginality")+
  geom_smooth(data = grid.marg.stem, color = "black")

p + mynamestheme

dev.off()



#############fitting marginality ~ crown age#######################
m.marg.crown <- gls(marg.log ~ crown.log + bioregion, data = furna.data,
                   correlation = corBrownian(1, tree.trim, form = ~species),
                   method = "ML")

summary(m.marg.crown)
anova(m.marg.crown)
intervals(m.marg.crown)

##checking model assumptions
hist(m.marg.crown$residuals) ##seems normal
qqnorm(m.marg.crown$residuals)
qqline(m.marg.crown$residuals) ##looks fine

###null modelS

##null model controlling bioregion
m.marg.crown.null.bio <- gls(marg.log ~ bioregion, data = furna.data,
                         correlation = corBrownian(1, tree.trim, form = ~species),
                         method = "ML")

anova(m.marg.crown, m.marg.crown.null.bio) ###not significant

##null model without predictors
m.marg.crown.null.total <- gls(marg.log ~ 1, data = furna.data,
                           correlation = corBrownian(1, tree.trim, form = ~species),
                           method = "ML")

anova(m.marg.crown, m.marg.crown.null.total) ###significative

###fitting a model only with crown and a complete null model
m.marg.crown.only <- gls(marg.log ~ crown.log, data = furna.data,
                    correlation = corBrownian(1, tree.trim, form = ~species),
                    method = "ML")


####Graphics#######

###data frame from the model
grid.marg.crown <- furna.data %>%
  data_grid(crown.log) %>%
  add_predictions(m.marg.crown.only, var = "marg.log")


##defining fonts, faces and sizes  
mynamestheme <- theme(legend.title = element_text(family = "serif", size = (10)), 
                      legend.text = element_text(face = "italic", family = "serif", size = (9)), 
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("marg.crown.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
marg.crown <- ggplot(furna.data, aes(x = crown.log, y = marg.log))
##ggplot complement

p = marg.crown + geom_point(alpha = 0.7)+
  labs(x = "log Crown Age (myr)", 
       y = "log Marginality")+
  geom_smooth(data = grid.marg.crown, color = "black")

p + mynamestheme

dev.off()



#############fitting specialization ~ stem age#######################
m.spe.stem <- gls(spe.log ~ stem.log + bioregion, data = furna.data,
                    correlation = corBrownian(1, tree.trim, form = ~species),
                   method = "ML")

summary(m.spe.stem)
anova(m.spe.stem)
intervals(m.spe.stem)

##checking model assumptions
hist(m.spe.stem$residuals) ##seems normal
qqnorm(m.spe.stem$residuals)
qqline(m.spe.stem$residuals) ##looks unfitted in the tail

###NULL models

##null model controlling bioregion
m.spe.stem.null.bio <- gls(spe.log ~ bioregion, data = furna.data,
                       correlation = corBrownian(1, tree.trim, form = ~species),
                       method = "ML")

anova(m.spe.stem, m.spe.stem.null.bio)

##null model without predictors
m.spe.stem.null.total <- gls(spe.log ~ 1, data = furna.data,
                  correlation = corBrownian(1, tree.trim, form = ~species),
                  method = "ML")

anova(m.spe.stem, m.spe.stem.null.total) ###significant

##########graphic###########

###data frame from the model
grid.spe.stem <- furna.data %>%
  data_grid(stem.log, bioregion) %>%
  add_predictions(m.spe.stem, var = "spe.log")


##defining fonts, faces and sizes  
mynamestheme <- theme(legend.title = element_text(family = "serif", size = (10)), 
                      legend.text = element_text(face = "italic", family = "serif", size = (9)), 
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("spe.stem.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
spe.stem <- ggplot(furna.data, aes(x = stem.log, y = spe.log))
##ggplot complement

p = spe.stem + geom_point(alpha = 0.7)+
  labs(x = "log Stem Age (myr)", 
       y = "log Specialization")+
  geom_smooth(data = grid.spe.stem, color = "black")

p + mynamestheme

dev.off()

####graphic for bioregion######
###function for adapting glht for gls
model.matrix.gls <- function(object, ...) {
  model.matrix(terms(object), data = getData(object), ...)
}
model.frame.gls <- function(object, ...) {
  model.frame(formula(object), data = getData(object), ...)
}
terms.gls <- function(object, ...) {
  terms(model.frame(object), ...)
}

###tukey test for evaluating which bioregions are different
post.spe.bio <- glht(m.spe.stem.null.bio, linfct = mcp(bioregion = "Tukey"))
summary(post.spe.bio) ##only bio2 and bio1 are significatively different


#########graphic boxplot########


##defining fonts, faces and sizes  
mynamestheme <- theme(axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("spe.bio.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
spe.bio <- ggplot(data = furna.data, aes(reorder(bioregion, -spe.log), spe.log))

##ggplot complement
x = spe.bio + geom_boxplot(width=0.5, fill="gray90")
p = x + labs(x = "Bioregions", 
             y = "log Specialization")+
  theme_bw() + geom_jitter(shape=16, size = 1, alpha = 0.3, position=position_jitter(0.2))

o = p+geom_signif(comparisons = list(c("bio1", "bio2"), c("bio1", "bio3"),
                                     c("bio3", "bio4")), 
                  map_signif_level=TRUE)


o+mynamestheme

dev.off()


#############fitting specialization ~ crown age#######################
m.spe.crown <- gls(spe.log ~ crown.log + bioregion, data = furna.data,
                  correlation = corBrownian(1, tree.trim, form = ~species),
                  method = "ML")

summary(m.spe.crown)
anova(m.spe.crown)
intervals(m.spe.crown)

##checking model assumptions
hist(m.spe.crown$residuals) ##seems normal
qqnorm(m.spe.crown$residuals)
qqline(m.spe.crown$residuals) ##looks unfitted in the tail

##NULL model comparison

###null model controlling bioregion
m.spe.crown.null.bio <- gls(spe.log ~ bioregion, data = furna.data,
                        correlation = corBrownian(1, tree.trim, form = ~species),
                        method = "ML")

anova(m.spe.crown, m.spe.crown.null.bio)

##null model without predictors
m.spe.crown.null.total <- gls(spe.log ~ 1, data = furna.data,
                        correlation = corBrownian(1, tree.trim, form = ~species),
                        method = "ML")

anova(m.spe.crown, m.spe.crown.null.total) ###significant

###############graphic################

###data frame from the model
grid.spe.crown <- furna.data %>%
  data_grid(crown.log, bioregion) %>%
  add_predictions(m.spe.crown, var = "spe.log")


##defining fonts, faces and sizes  
mynamestheme <- theme(legend.title = element_text(family = "serif", size = (10)), 
                      legend.text = element_text(face = "italic", family = "serif", size = (9)), 
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("spe.crown.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
spe.crown <- ggplot(furna.data, aes(x = crown.log, y = spe.log))
##ggplot complement

p = spe.crown + geom_point(alpha = 0.7)+
  labs(x = "log Crown Age (myr)", 
       y = "log Specialization")+
  geom_smooth(data = grid.spe.crown, color = "black")

p + mynamestheme

dev.off()


#############fitting specialization ~ marginality #######################
m.spe.marg <- gls(spe.log ~ marg.log + bioregion, data = furna.data,
                   correlation = corBrownian(1, tree.trim, form = ~species),
                   method = "ML")

summary(m.spe.marg)
anova(m.spe.marg)
intervals(m.spe.marg)

##checking model assumptions
hist(m.spe.marg$residuals) ##it does not seem very normal, but also does not seem skewed
qqnorm(m.spe.marg$residuals)
qqline(m.spe.marg$residuals) ##both tails are outside the fit

##NULL model comparisons

##null model controlling bioregions
m.spe.marg.null.bio <- gls(spe.log ~ bioregion, data = furna.data,
                          correlation = corBrownian(1, tree.trim, form = ~species),
                          method = "ML")

anova(m.spe.marg, m.spe.marg.null.bio)

##null model without predictors
m.spe.marg.null.total <- gls(spe.log ~ 1, data = furna.data,
                       correlation = corBrownian(1, tree.trim, form = ~species),
                       method = "ML")

anova(m.spe.marg, m.spe.marg.null.total) ##significant

###############graphic##################

###data frame from the model
grid.spe.marg <- furna.data %>%
  data_grid(marg.log) %>%
  add_predictions(m.spe.marg, var = "spe.log")


##defining fonts, faces and sizes  
mynamestheme <- theme(legend.title = element_text(family = "serif", size = (10)), 
                      legend.text = element_text(face = "italic", family = "serif", size = (9)), 
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("spe.marg2.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
spe.marg <- ggplot(furna.data, aes(x = marg.log, y = spe.log))
##ggplot complement

p = spe.marg + geom_point(alpha = 0.7)+
  labs(x = "log Marginality", 
       y = "log Specialization")+
  geom_smooth(color = "black")

p + mynamestheme

dev.off()
